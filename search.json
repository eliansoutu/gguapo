[{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://eliansoutu.github.io/gguapo/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://eliansoutu.github.io/gguapo/articles/guapo.html","id":"plot_guapo","dir":"Articles","previous_headings":"","what":"plot_guapo","title":"Plot guapo","text":"gguapo provee una función genérica para aplicar un estilo limpio y elegante tus gráficos, con distintos parámetros que se pueden ajustar. La salida predeterminada luce así:","code":"plot_guapo(data, name, paintings, plot_type = \"scatter\")"},{"path":"https://eliansoutu.github.io/gguapo/articles/guapo.html","id":"fill_varcolor_var","dir":"Articles","previous_headings":"plot_guapo","what":"fill_var/color_var","title":"Plot guapo","text":"","code":"plot_guapo(data, name, paintings, fill_var = genre)"},{"path":"https://eliansoutu.github.io/gguapo/articles/guapo.html","id":"palette_name-dark_mode","dir":"Articles","previous_headings":"plot_guapo","what":"palette_name + dark_mode","title":"Plot guapo","text":"plot_guapo tiene algunas variantes de paletas para utilizar. Las opciones son: guapo, guapero, guapon y guapisimo. Además, con el dark_mode se puede cambiar la estética general algo oscuro/claro.","code":"plot_guapo(data, name, paintings, palette_name = \"guapero\") plot_guapo(data, name, paintings, palette_name = \"guapisimo\", dark_mode = T) plot_guapo(data, name, paintings, palette_name = \"guapon\", dark_mode = T)"},{"path":"https://eliansoutu.github.io/gguapo/articles/guapo.html","id":"highlight_values","dir":"Articles","previous_headings":"plot_guapo","what":"highlight_values","title":"Plot guapo","text":"Una opción útil es resaltar algún dato, para lo cual podemos indicar el valor del eje x que nos interesa destacar.","code":"plot_guapo(data, name, paintings, dark_mode = T, highlight_values = c(\"Picasso\")) plot_guapo(data, name, paintings, dark_mode = T, plot_type = \"scatter\",            highlight_values = c(\"Picasso\",\"Van Gogh\"), show_baseline = T)"},{"path":"https://eliansoutu.github.io/gguapo/articles/guapo.html","id":"otros","dir":"Articles","previous_headings":"plot_guapo","what":"Otros","title":"Plot guapo","text":"Hay otros parámetros para ajustar. Por ejemplo, sombras, brillo y difuminación.","code":"plot_guapo(data, name, paintings, dark_mode = T,            apply_shadow = T, apply_glow = T, apply_blur_background = T)"},{"path":"https://eliansoutu.github.io/gguapo/articles/guapo.html","id":"mapa_guapo","dir":"Articles","previous_headings":"","what":"mapa_guapo","title":"Plot guapo","text":"plot_guapo acepta objetos sf para hacer mapas, sin embargo, una alternativa estilística es usar mapa_guapo que tiene un enfoque distinto. Esta función se encuentra en desarrollo, por lo que puede modificarse futuro.  Aplicado un objeto geográfico real se vería:","code":"# Datos de los polígonos en WKT wkt_poligonos <- c(   \"POLYGON ((0 0, 1 0, 1 1, 0 1, 0 0))\",   \"POLYGON ((2 2, 3 2, 3 3, 2 3, 2 2))\" )  # Crear objetos sf a partir de WKT geometrias <- sf::st_as_sfc(wkt_poligonos, crs = 4326) # Asignamos el CRS aquí  # Crear un dataframe con atributos df_atributos <- data.frame(   nombre = c(\"Cuadrado A\", \"Cuadrado B\"),   valor = c(10, 25) )  # Unir las geometrías con los atributos para formar el sf dataframe de ejemplo sf_prueba_cuadrados <- sf::st_sf(df_atributos, geometry = geometrias)  mapa_guapo(data = sf_prueba_cuadrados, fill = valor)"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_da_vinci---leonardo-da-vinci","dir":"Articles","previous_headings":"","what":"style_da_vinci() - Leonardo da Vinci","title":"Artists styles","text":"Esta función genera gráficos inspirados en la maestría renacentista de Leonardo da Vinci, utilizando su característico claroscuro, el sfumato (transiciones suaves entre colores) y tonos terrosos y naturales. Prioriza la legibilidad y un aire de estudio profundo. Inspiración General: Proporción, armonía y un realismo detallado. Opciones de work_inspired_by: “mona_lisa”: Tonos cálidos y marrones, con un foco en la sutiliza y el misterio. “last_supper”: Paleta más sombría con grises piedra y toques de color para reflejar la solemnidad. “vitruvian_man”: Colores más limpios y un fondo más claro, con énfasis en las formas y la estructura.","code":"#> $`Da Vinci - Column - mona_lisa` #>  #> $`Da Vinci - Line - last_supper` #>  #> $`Da Vinci - Scatter - vitruvian_man`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_michelangelo---miguel-ángel","dir":"Articles","previous_headings":"","what":"style_michelangelo() - Miguel Ángel","title":"Artists styles","text":"La función de Miguel Ángel captura la grandeza y fuerza del Alto Renacimiento, inspirándose en sus esculturas y frescos. El estilo se enfoca en la monumentalidad, los tonos marmóreos y el claroscuro dramático. Inspiración General: Poder, volumen y una profunda sensación de presencia. Opciones de work_inspired_by: “david”: Predominio de blancos, grises y azules fríos, reflejando la pureza del mármol. “sistine_chapel”: Tonos más intensos con rojos, dorados y azules profundos, inspirados en los frescos. “pieta”: Enfocado en grises y platas con toques de azul-verde para la solemnidad y el dolor.","code":"#> $`Michelangelo - Column - david` #>  #> $`Michelangelo - Line - sistine_chapel` #>  #> $`Michelangelo - Scatter - pieta`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_rembrandt---rembrandt","dir":"Articles","previous_headings":"","what":"style_rembrandt() - Rembrandt","title":"Artists styles","text":"El estilo Rembrandt se sumerge en el claroscuro barroco, donde la luz emerge dramáticamente de la oscuridad. La función enfatiza los tonos oscuros y terrosos, los dorados y la iluminación puntual. Inspiración General: Profundidad, misterio y el juego entre luz y sombra. Opciones de work_inspired_by: “night_watch”: Marrones oscuros, dorados y toques de crema para la teatralidad y el movimiento. “self_portrait”: Tonos sepia y marrones cálidos para la intimidad y el estudio de carácter. “storm_sea”: Azules grises oscuros y blancos tormentosos para la dramaticidad y el movimiento.","code":"#> $`Rembrandt - Column - night_watch` #>  #> $`Rembrandt - Line - self_portrait` #>  #> $`Rembrandt - Scatter - storm_sea`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_van_gogh---vincent-van-gogh","dir":"Articles","previous_headings":"","what":"style_van_gogh() - Vincent van Gogh","title":"Artists styles","text":"Esta función evoca la pasión y el movimiento del post-impresionismo de Van Gogh, caracterizado por sus pinceladas audaces, colores vibrantes y la sensación de textura y energía. Inspiración General: Emoción, movimiento y una percepción subjetiva de la realidad. Opciones de work_inspired_by: “starry_night”: Azules oscuros, amarillos brillantes, para una atmósfera nocturna y misteriosa. “sunflowers”: Amarillos, naranjas y marrones intensos, transmitiendo calor y vitalidad. “irises”: Morados, azules y verdes suaves, evocando la tranquilidad y la naturaleza.","code":"#> $`Van Gogh - Column - starry_night` #>  #> $`Van Gogh - Line - sunflowers` #>  #> $`Van Gogh - Scatter - irises`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_monet---claude-monet","dir":"Articles","previous_headings":"","what":"style_monet() - Claude Monet","title":"Artists styles","text":"Inspirada en el impresionismo de Claude Monet, esta función se centra en la captura de la luz, el color y la atmósfera en un momento dado. Se utilizan tonos suaves, difuminados y una sensación de efecto acuarela. Inspiración General: Luz efímera, naturaleza, y la percepción cambiante. Opciones de work_inspired_by: “water_lilies”: Tonos acuáticos, verdes y azules suaves. “impression_sunrise”: Naranjas, rosas y azules claros, para un efecto de amanecer. “poppy_fields”: Rojos vibrantes (amapolas), azules cielo y verdes pradera.","code":"#> $`Monet - Column - water_lilies` #>  #> $`Monet - Line - impression_sunrise` #>  #> $`Monet - Scatter - poppy_fields`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_banksy---banksy","dir":"Articles","previous_headings":"","what":"style_banksy() - Banksy","title":"Artists styles","text":"La función Banksy canaliza el arte urbano y la crítica social de este enigmático artista. Se basa en el estilo stencil, el uso de blanco y negro con acentos de color llamativos, y una estética cruda y directa. Inspiración General: Mensajes directos, impacto visual callejero, y una sensación de grabado. Opciones de work_inspired_by: “girl_with_balloon”: Blanco, negro y el icónico rojo del globo. “flower_thrower”: Negro y blanco con el toque de colores primarios en las flores. “rat_graffiti”: Predominio de blanco y negro, con acentos de naranja o rojo fuerte.","code":"#> $`Banksy - Column - girl_with_balloon` #>  #> $`Banksy - Line - flower_thrower` #>  #> $`Banksy - Scatter - rat_graffiti`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_dali---salvador-dalí","dir":"Articles","previous_headings":"","what":"style_dali() - Salvador Dalí","title":"Artists styles","text":"Esta función sumerge tus datos en el surrealismo onírico de Dalí, caracterizado por formas distorsionadas, elementos simbólicos, y contrastes de color inesperados. Inspiración General: Sueños, subconsciente, y una realidad maleable. Opciones de work_inspired_by: “persistence_memory”: Marrones, ocres y azules desérticos. “elephants”: Morados profundos, rojos, y grises para una atmósfera dramática. “swans_reflecting_elephants”: Verdes, azules y dorados, explorando la dualidad y los reflejos.","code":"#> $`Dali - Column - persistence_memory` #>  #> $`Dali - Line - elephants` #>  #> $`Dali - Scatter - swans_reflecting_elephants`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_miro---joan-miró","dir":"Articles","previous_headings":"","what":"style_miro() - Joan Miró","title":"Artists styles","text":"La función de Miró busca transmitir la libertad y la espontaneidad del surrealismo abstracto. Se caracteriza por formas orgánicas y geométricas simples, colores primarios y vibrantes, y líneas negras distintivas. Inspiración General: Simbolismo lúdico, biomorfismo y un sentido de universo personal. Opciones de work_inspired_by: “the_farm”: Tonos tierra con estallidos de colores primarios para un ambiente rústico y simbólico. “constellations”: Negro profundo para el fondo con puntos y líneas brillantes en colores primarios sobre él. “blue_series”: Predominio de azules, con elementos negros para el contraste y la estructura.","code":"#> $`Miro - Column - the_farm` #>  #> $`Miro - Line - constellations` #>  #> $`Miro - Scatter - blue_series`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_gentileschi---artemisia-gentileschi","dir":"Articles","previous_headings":"","what":"style_gentileschi() - Artemisia Gentileschi","title":"Artists styles","text":"Esta función rinde homenaje la maestra barroca Artemisia Gentileschi, conocida por su claroscuro intenso, colores ricos y profundos, y la representación de figuras femeninas poderosas y dramáticas. Inspiración General: Dramatismo, realismo psicológico y la fuerza de la luz en la oscuridad. Opciones de work_inspired_by: “judith_beheading_holofernes”: Rojos sangre, marrones oscuros y negros para una atmósfera intensa y violenta. “mary_magdalene”: Morados profundos, grises y tonos piel para una representación introspectiva. “self_portrait_lute_player”: Marrones cálidos, ocres y cremas, con un enfoque en la expresión y la luz sobre la piel.","code":"#> $`Gentileschi - Column - judith_beheading_holofernes` #>  #> $`Gentileschi - Line - mary_magdalene` #>  #> $`Gentileschi - Scatter - self_portrait_lute_player`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_kandinsky---wassily-kandinsky","dir":"Articles","previous_headings":"","what":"style_kandinsky() - Wassily Kandinsky","title":"Artists styles","text":"La función de Kandinsky abraza el expresionismo abstracto y el arte figurativo. Se caracteriza por la explosión de colores vibrantes, formas geométricas y orgánicas en composiciones dinámicas, y una sensación de sinestesia (relación entre sonido y color). Inspiración General: Armonía espiritual, expresión emocional través del color y la forma. Opciones de work_inspired_by: “composition_viii”: Predominio de formas geométricas con colores primarios y negros. “yellow_red_blue”: Un enfoque directo en los tres colores fundamentales, con líneas negras marcadas. “on_white_ii”: Mayor uso del blanco y tonos claros, con formas de colores más sutiles que flotan en el espacio.","code":"#> $`Kandinsky - Column - composition_viii` #>  #> $`Kandinsky - Line - yellow_red_blue` #>  #> $`Kandinsky - Scatter - on_white_ii`"},{"path":"https://eliansoutu.github.io/gguapo/articles/styles.html","id":"style_warhol---andy-warhol","dir":"Articles","previous_headings":"","what":"style_warhol() - Andy Warhol","title":"Artists styles","text":"Esta función sumerge los datos en el vibrante mundo del Pop Art de Andy Warhol. Se caracteriza por colores planos y contrastantes, la repetición de imágenes icónicas y una estética que celebra la cultura de consumo masivo. Inspiración General: Fama, consumo, y la estetización de lo cotidiano. Opciones de work_inspired_by: “soup_cans”: Rojo, blanco y negro, con toques de amarillo. “marilyn_monroe”: Tonos de fucsia, cian, amarillo, con fuerte contraste. “cow_wallpaper”: Verdes ácidos y negros, evocando la repetición de patrones.","code":"#> $`Warhol - Column - soup_cans` #>  #> $`Warhol - Line - marilyn_monroe` #>  #> $`Warhol - Scatter - cow_wallpaper`"},{"path":"https://eliansoutu.github.io/gguapo/articles/use_styles.html","id":"funciones-de-artistas","dir":"Articles","previous_headings":"","what":"Funciones de artistas","title":"Uso de styles","text":"Las funciones están pensadas para ofrecer una visualización rápida que requiera escribir muchas líneas de código. Esto puede traer problemas como superposición de elementos o tamaños inadecuados en determinados gráficos. Tener en cuenta que se pueden sobreescribir algunas configuraciones sumando capas o funciones continuación como si fuera un ggplot común.","code":""},{"path":"https://eliansoutu.github.io/gguapo/articles/use_styles.html","id":"load_all_fonts","dir":"Articles","previous_headings":"Funciones de artistas","what":"load_all_fonts","title":"Uso de styles","text":"Correr una vez por sesión Antes de utilizar las funciones de style se recomienda ejecutar load_all_fonts() para cargar las fuentes que se utilizan, siempre y cuando las tenga ya instaladas en su sistema, las cuales se agregan desde Google con sysfonts::font_add_google. En caso de querer usar una solo función de artista, se puede pasar el parámetro de artist para cargar específicamente las fuentes de ese artista. Cada función de style_() posee parámetros para personalizar aún más el estilo del gráfico. Como mínimo debemos indicarle las variables de X e Y (excepto mapas). Tomemos como ejemplo la función de Da Vinci en versión columnas:","code":"load_all_fonts(\"da_vinci\") #Cargo solo da_vinci #> Fuentes cargadas: Playfair Display, Merriweather style_da_vinci(data, name, paintings)"},{"path":"https://eliansoutu.github.io/gguapo/articles/use_styles.html","id":"work_inspired_by","dir":"Articles","previous_headings":"Funciones de artistas","what":"work_inspired_by","title":"Uso de styles","text":"Podemos seleccionar alguna variante inspirada en sus obras. En el caso de Da Vinci, las opciones de work_inspired_by son: mona_lisa (default), last_supper y vitruvian_man","code":"style_da_vinci(data, name, paintings,  work_inspired_by = \"last_supper\") style_da_vinci(data, name, paintings,  work_inspired_by = \"vitruvian_man\")"},{"path":"https://eliansoutu.github.io/gguapo/articles/use_styles.html","id":"fill_var-o-color_var","dir":"Articles","previous_headings":"Funciones de artistas","what":"fill_var o color_var","title":"Uso de styles","text":"Podemos utilizar alguna variable de mapeo para jugar con los colores de la paleta y diferenciar categorías:","code":"style_da_vinci(data, name, paintings, fill_var = genre)"},{"path":"https://eliansoutu.github.io/gguapo/articles/use_styles.html","id":"show_labels","dir":"Articles","previous_headings":"Funciones de artistas","what":"show_labels","title":"Uso de styles","text":"Agregar etiquetas sobre el eje Y (y expando eje Y):  Incluso cambiar la orientación ajustando el parámetro coord_flip","code":"style_da_vinci(data, name, paintings,  show_labels = T) style_da_vinci(data, name, paintings,  show_labels = T, coord_flip = T) +   ggplot2::coord_flip() +   ggplot2::scale_y_continuous(limits = c(0, 1000)) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":"https://eliansoutu.github.io/gguapo/articles/use_styles.html","id":"labs","dir":"Articles","previous_headings":"Funciones de artistas","what":"labs","title":"Uso de styles","text":"","code":"style_da_vinci(data, name, paintings,  title = \"Título\", subtitle = \"Subtítulo\", caption = \"Leyenda\")"},{"path":"https://eliansoutu.github.io/gguapo/articles/use_styles.html","id":"otros","dir":"Articles","previous_headings":"Funciones de artistas","what":"Otros","title":"Uso de styles","text":"Para aquellos artistas valientes que quieran retocar aún más el gráfico y desafiar los límites del arte, se pueden ajustar otros parámetros como add_glow, canvas y add_texture. add_grid_lines incorpora las líneas de la grilla del gráfico. show_background agrega color al panel del gráfico para mayor contraste. add_texture aplica textura al geom simulando pinceladas o trazos. Para gráficos de columna hay tres opciones (1 al 3) y funciona con fill_var. En el caso de gráficos de líneas o puntos cualquiera de las opciones (1 al 3) aplica el mismo efecto. canvas ofrece la posibilidad de agregar un fondo estilo lienzo al panel del gráfico, lo cual es compatible con el uso de add_grid_lines o show_background. Se puede optar por distintos lienzos (del 1 al 6). add_glow agrega brillo las geom principales. add_filter es aún muy experimental, puede demorar unos segundos en cargar. Aplica un filtro estilo pintura al gráfico entero, generando márgenes indeseados. Se sugiere aumentar el text_size para mejorar la visual de los textos.","code":"style_da_vinci(data, name, paintings,                 work_inspired_by = \"last_supper\",                 canvas = 6,                 add_glow = T) style_da_vinci(data, name, paintings,                 canvas = 5,                 add_texture = 1) style_da_vinci(data, name, paintings,                 canvas = 5,                 add_texture = 2,                add_filter = T,                text_size = 30)"},{"path":"https://eliansoutu.github.io/gguapo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elián Soutullo. Maintainer.","code":""},{"path":"https://eliansoutu.github.io/gguapo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Soutullo E (2025). gguapo: Gráficos de ggplot2 con estilos artísticos y personalizados. R package version 0.1.0, https://eliansoutu.github.io/gguapo/.","code":"@Manual{,   title = {gguapo: Gráficos de ggplot2 con estilos artísticos y personalizados},   author = {Elián Soutullo},   year = {2025},   note = {R package version 0.1.0},   url = {https://eliansoutu.github.io/gguapo/}, }"},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"gguapo-","dir":"","previous_headings":"","what":"Gráficos de ggplot2 con estilos artísticos y personalizados","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"gguapo ofrece opciones rápidas para crear gráficos básicos (columnas, líneas, puntos y mapas) con la lógica de ggplot2 y con estilos únicos inspirados en artistas reconocidos. Además cuenta con funciones propias para hacer visualizaciones con mayor impacto visual.","code":""},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"instrucciones-de-instalación","dir":"","previous_headings":"","what":"Instrucciones de instalación","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"Versión en desarrollo:","code":"devtools::install_github(\"eliansoutu/gguapo\", upgrade = F)"},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"funciones-principales","dir":"","previous_headings":"","what":"Funciones principales","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"style_(): funciones propias de cada artista con atributos predefinidos y personalizables. Los artistas representados son: Da Vinci (da_vinci), Van Gogh (van_gogh), Michelangelo (michelangelo), Rembrandt (rembrandt), Monet (monet), Banksy (banksy), Dalí (dali), Miró (miro), Gentileschi (gentileschi), Kandinsky (kandinsky) y Warhol (warhol). Cada artista, además, posee tres variantes de estilos basadas en tres de sus obras principales (ver documentación). plot_guapo(): ofrece parámetros estéticos fáciles de ajustar para crear gráficos guapos. load_all_fonts(): necesaria para cargar las fuentes que utilizan los distintos estilos de artistas. Se ejecuta una vez por sesión. mapa_guapo() (en desarrollo ): alternativa al plot_guapo y con un enfoque de diseño orientado mapas.","code":""},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"modo-de-uso","dir":"","previous_headings":"","what":"Modo de uso","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"Estos son ejemplos básicos sobre cómo utilizar las funciones de la librería:","code":""},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"style_","dir":"","previous_headings":"Modo de uso","what":"style_()","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"","code":"library(gguapo)  data <- structure(list(name = c(\"Van Gogh\", \"Degas\", \"Picasso\",  \"Renoir\", \"Dürer\", \"Gauguin\", \"Goya\",  \"Rembrandt\", \"Sisley\", \"Titian\"), genre = c(\"Post-Impressionism\",  \"Impressionism\", \"Cubism\", \"Impressionism\", \"Northern Renaissance\",  \"Symbolism,Post-Impressionism\", \"Romanticism\", \"Baroque\", \"Impressionism\",  \"High Renaissance,Mannerism\"), paintings = c(877L, 702L, 439L,  336L, 328L, 311L, 291L, 262L, 259L, 255L)), class = \"data.frame\", row.names = c(NA,  -10L))  load_all_fonts(\"banksy\") # Carga fuentes del paquete  style_banksy(data, name, paintings, plot_type = \"column\")"},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"plot_guapo","dir":"","previous_headings":"Modo de uso","what":"plot_guapo","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"Función propia para crear gráficos estilizados y hacer retoques estéticos, por ejemplo, resaltar un valor de manera sencilla:  Datos de ejemplo en base : https://www.kaggle.com/datasets/ikarus777/best-artworks---time/data Ver vignettes para más detalles sobre el uso de las funciones.","code":"plot_guapo(data, name, paintings, plot_type = \"column\", title = \"Gráfico guapo\", dark_mode = T, highlight_values = c(\"Vincent van Gogh\"))"},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"disclaimers","dir":"","previous_headings":"","what":"Disclaimers","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"Es un paquete en desarrollo, seguramente habrá cambios y agregados futuro. Las funciones de estilo inspiradas en artistas y sus obras buscan representar necesariamente el estilo real de los mismos. Es una búsqueda inspirada en paletas de colores, fuentes y otros recursos estéticos. La selección de artistas fue arbitraria y pensada en contar con variedad de estilos, representa el gusto artístico del autor del paquete (el cual dicho sea de paso es experto en arte). Gran parte del código y las decisiones estéticas fueron realizadas con IA, por lo cual es posible encontrarse con errores: los robots al igual que los humanos y el arte son perfectos. El autor se compromete seguir ajustando las funciones y estilos. Las funciones se nutren de varios y maravillosos paquetes que forman parte del universo ggplot. Como los grandes artistas, un poco hay que robarle inspirarse en otros.","code":""},{"path":"https://eliansoutu.github.io/gguapo/index.html","id":"cómo-contribuir-con-el-proyecto","dir":"","previous_headings":"","what":"Cómo contribuir con el proyecto","title":"Gráficos de ggplot2 con estilos artísticos y personalizados","text":"Para colaborar en este proyecto, se recomienda hacer un Fork, trabajar sobre ese repositorio y, antes de hacer el pull request, correr el devtools::check() para garantizar que haya conflictos. Sentíte libre de hacer tu aporte, sea agregar nuevas funciones con estilos o modificar parámetros de las actuales.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/apply_common_theme_and_labs.html","id":null,"dir":"Reference","previous_headings":"","what":"Función auxiliar para aplicar temas y etiquetas comunes — apply_common_theme_and_labs","title":"Función auxiliar para aplicar temas y etiquetas comunes — apply_common_theme_and_labs","text":"Encapsula la lógica de ggplot2::theme() y ggplot2::labs() para reducir la duplicación de código.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/apply_common_theme_and_labs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Función auxiliar para aplicar temas y etiquetas comunes — apply_common_theme_and_labs","text":"","code":"apply_common_theme_and_labs(   p,   settings,   plot_type,   add_grid_lines,   show_background,   title,   subtitle,   caption,   x_label,   y_label,   base_theme_fun,   grid_linetype,   grid_linewidth,   axis_line_linewidth,   panel_background_map_specific = FALSE,   text_size = 12 )"},{"path":"https://eliansoutu.github.io/gguapo/reference/apply_common_theme_and_labs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Función auxiliar para aplicar temas y etiquetas comunes — apply_common_theme_and_labs","text":"p Objeto ggplot2 actual. settings Lista de configuraciones de estilo (colores, fuentes, etc.). plot_type Tipo de gráfico (para ajustes condicionales de ejes/cuadrícula). add_grid_lines Lógico, si mostrar líneas de cuadrícula. show_background Lógico, si mostrar el fondo del panel. title Título del gráfico. subtitle Subtítulo del gráfico. caption Leyenda del gráfico. x_label Nombre de la variable del eje x (para etiquetas). y_label Nombre de la variable del eje y (para etiquetas). base_theme_fun Función de tema base de ggplot2 (ej. `ggplot2::theme_void`). grid_linetype Tipo de línea para la cuadrícula principal. grid_linewidth Ancho de línea para la cuadrícula principal. axis_line_linewidth Ancho de línea para los ejes. panel_background_map_specific Lógico, si el tema del panel tiene lógica especial para mapas.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/apply_common_theme_and_labs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Función auxiliar para aplicar temas y etiquetas comunes — apply_common_theme_and_labs","text":"Objeto ggplot2 con el tema y las etiquetas aplicadas.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/generate_color_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate ggplot2 color and fill scales dynamically — generate_color_scale","title":"Generate ggplot2 color and fill scales dynamically — generate_color_scale","text":"function intelligently applies manual automatically generated   color/fill scales based number unique levels specified variable   available custom colors. variable continuous, defaults viridis scale.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/generate_color_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate ggplot2 color and fill scales dynamically — generate_color_scale","text":"","code":"generate_color_scale(data, var_name, current_colors, type = c(\"color\", \"fill\"))"},{"path":"https://eliansoutu.github.io/gguapo/reference/generate_color_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate ggplot2 color and fill scales dynamically — generate_color_scale","text":"data data frame containing variable. var_name string specifying column name color fill mapping. current_colors vector preferred colors style settings. type type scale generate: \"color\" \"fill\".","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/generate_color_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate ggplot2 color and fill scales dynamically — generate_color_scale","text":"ggplot2 scale object (e.g., `scale_color_manual`, `scale_fill_manual`) NULL variable map.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/get_artist_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Configura los estilos visuales según el artista y obra — get_artist_settings","title":"Configura los estilos visuales según el artista y obra — get_artist_settings","text":"Devuelve una lista con parámetros visuales como paleta, tipografía, colores y más, según el artista y la obra elegida.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/get_artist_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configura los estilos visuales según el artista y obra — get_artist_settings","text":"","code":"get_artist_settings(   artist = c(\"da_vinci\", \"michelangelo\", \"rembrandt\", \"van_gogh\", \"monet\", \"banksy\",     \"dali\", \"gentileschi\", \"miro\", \"kandinsky\", \"warhol\"),   work )"},{"path":"https://eliansoutu.github.io/gguapo/reference/get_artist_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configura los estilos visuales según el artista y obra — get_artist_settings","text":"artist Nombre del artista: \"da_vinci\" o \"michelangelo\". work Nombre de la obra específica del artista.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/get_artist_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configura los estilos visuales según el artista y obra — get_artist_settings","text":"Una lista con los parámetros del estilo visual.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/load_all_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Google Fonts used in artist styles — load_all_fonts","title":"Load Google Fonts used in artist styles — load_all_fonts","text":"Load Google Fonts used specific artist's visual styles, fonts 'artist = \"\"'. avoids unnecessary font loading speeds rendering.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/load_all_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Google Fonts used in artist styles — load_all_fonts","text":"","code":"load_all_fonts(artist = \"all\")"},{"path":"https://eliansoutu.github.io/gguapo/reference/load_all_fonts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Google Fonts used in artist styles — load_all_fonts","text":"artist Character. One supported artists (e.g., \"dali\", \"monet\") \"\" load fonts. Default \"\".","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/mapa_guapo.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapa Guapo — mapa_guapo","title":"Mapa Guapo — mapa_guapo","text":"Genera mapas estéticamente agradables utilizando `ggplot2` y `sf`, con opciones para diferentes tipos de geometría y personalización visual.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/mapa_guapo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapa Guapo — mapa_guapo","text":"","code":"mapa_guapo(   data,   tipo = \"poligono\",   fill = NULL,   color = NULL,   size = 1,   titulo = NULL,   subtitulo = NULL,   etiqueta = NULL,   palette = \"Blues\",   font = \"Poppins\",   show_shadow_polygons = TRUE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/mapa_guapo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapa Guapo — mapa_guapo","text":"data Un objeto `sf` (simple features) que contiene los datos geográficos visualizar. tipo Un string que especifica el tipo de geometría graficar. Puede ser \"poligono\", \"linea\" o \"punto\". fill (Tidy-evaluated) Nombre de la columna para mapear el color de relleno de los polígonos. Solo aplica para `tipo = \"poligono\"`. color (Tidy-evaluated) Nombre de la columna para mapear el color de las líneas o puntos. Solo aplica para `tipo = \"linea\"` o `tipo = \"punto\"`. size Un valor numérico que especifica el tamaño de las líneas o puntos. Por defecto es 1. titulo Un string opcional que especifica el título principal del mapa. subtitulo Un string opcional que especifica el subtítulo del mapa. etiqueta (Tidy-evaluated) Nombre de la columna usar para etiquetar las geometrías en el mapa. palette Un string que especifica la paleta de colores usar para el relleno de polígonos (ej. \"Blues\", \"Reds\"). Compatible con `scale_fill_distiller`. font Un string que especifica la familia de fuente usar para el texto del mapa (título, etiquetas). Por defecto es \"Poppins\". Asegúrate de que la fuente esté disponible. show_shadow_polygons Lógico. Si aplicar una sombra los polígonos. Por defecto es TRUE.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/mapa_guapo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mapa Guapo — mapa_guapo","text":"Un objeto `ggplot2` que representa el mapa generado.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/plot_guapo.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_guapo: Highly Stylized Data Visualization with ggplot2 — plot_guapo","title":"plot_guapo: Highly Stylized Data Visualization with ggplot2 — plot_guapo","text":"Creates high-impact, visually appealing plots using `ggplot2`, supporting multiple plot types (`\"column\"`, `\"scatter\"`, `\"line\"`, `\"map\"`), modern color palettes, Google Fonts, advanced visual effects like glow, shadow, background blur.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/plot_guapo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_guapo: Highly Stylized Data Visualization with ggplot2 — plot_guapo","text":"","code":"plot_guapo(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Visualización de Datos Impactante\",   subtitle = \"Con Estilo y Diseño Avanzado\",   caption = \"Generado con plot_guapo\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   palette_name = c(\"guapo\", \"guapero\", \"guapon\", \"guapisimo\"),   font_title_name = \"Orbitron\",   font_body_name = \"Poppins\",   show_labels = FALSE,   coord_flip = FALSE,   show_baseline = TRUE,   highlight_values = NULL,   highlight_color = \"#FFD700\",   facet_var = NULL,   dark_mode = FALSE,   apply_shadow = FALSE,   apply_glow = FALSE,   apply_blur_background = FALSE,   gradient_fill = FALSE,   base_alpha = 0.8,   geom_size = 3,   geom_stroke = 0.5,   text_size = 20 )"},{"path":"https://eliansoutu.github.io/gguapo/reference/plot_guapo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_guapo: Highly Stylized Data Visualization with ggplot2 — plot_guapo","text":"data data frame (`data.frame`) `sf` object (`plot_type = \"map\"`). x Variable x-axis (unquoted). y Variable y-axis (unquoted). color_var Variable used color aesthetics. fill_var Variable used fill aesthetics. label_var Variable used text labels. title Main plot title. subtitle Subtitle plot. caption Caption text displayed plot. plot_type Type plot: `\"column\"`, `\"scatter\"`, `\"line\"`, `\"map\"`. palette_name Color palette use: `\"guapo\"`, `\"guapero\"`, `\"guapon\"`, `\"guapisimo\"`. font_title_name Font title (Google Fonts, default: `\"Orbitron\"`). font_body_name Font body labels (default: `\"Poppins\"`). show_labels Logical. `TRUE`, displays text labels bars points. coord_flip Logical. `TRUE`, flips x y axes (useful bar plots). show_baseline Logical. `TRUE`, draws baseline y = 0 column line plots. highlight_values vector values highlight (based `color_var` `fill_var`). highlight_color Color used highlighting specific values. facet_var Variable used faceting (unquoted). dark_mode Logical. `TRUE`, applies dark-themed background. apply_shadow Logical. `TRUE`, applies shadow effect geoms. apply_glow Logical. `TRUE`, applies glow effect geoms. apply_blur_background Logical. `TRUE`, adds blurred background plot. gradient_fill Logical. `TRUE`, fills bars/points color gradient instead solid colors. base_alpha Alpha transparency applied geoms (default: 0.8). geom_size Size geom elements (points, lines, bars). geom_stroke Stroke width geoms (e.g., outline points). text_size Base size plot text (titles, labels, etc.).","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/plot_guapo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_guapo: Highly Stylized Data Visualization with ggplot2 — plot_guapo","text":"stylized `ggplot` object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/preview_styles.html","id":null,"dir":"Reference","previous_headings":"","what":"Previsualiza los estilos gráficos disponibles inspirados en artistas — preview_styles","title":"Previsualiza los estilos gráficos disponibles inspirados en artistas — preview_styles","text":"Esta función genera gráficos de ejemplo utilizando los estilos definidos para distintos artistas. Para cada artista se grafican tres obras representativas (columna, línea, dispersión).","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/preview_styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Previsualiza los estilos gráficos disponibles inspirados en artistas — preview_styles","text":"","code":"preview_styles(style_name = \"all\", display_plots = TRUE)"},{"path":"https://eliansoutu.github.io/gguapo/reference/preview_styles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Previsualiza los estilos gráficos disponibles inspirados en artistas — preview_styles","text":"style_name Nombre del estilo previsualizar. Puede ser un artista específico (por ejemplo, `\"da_vinci\"`) o `\"\"` para mostrar todos los estilos disponibles. display_plots Lógico. Si `TRUE`, se muestran los gráficos en pantalla. Si `FALSE`, se devuelve una lista de objetos `ggplot`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/preview_styles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Previsualiza los estilos gráficos disponibles inspirados en artistas — preview_styles","text":"Invisiblemente `NULL` si `display_plots = TRUE`, o una lista de objetos `ggplot` si `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/preview_styles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Previsualiza los estilos gráficos disponibles inspirados en artistas — preview_styles","text":"","code":"# Mostrar todos los estilos preview_styles(\"all\") #> Fuentes cargadas: Playfair Display, Merriweather, Open Sans, Roboto Condensed, Lato, Special Elite, Cutive Mono, Permanent Marker, Cabin Sketch, Poppins, Amatic SC, Indie Flower, Architects Daughter, Pacifico, Oswald, Bebas Neue, Bangers, Libre Barcode 39 Text                                   # Solo el estilo de Monet preview_styles(\"monet\") #> Fuentes cargadas: Playfair Display, Poppins, Open Sans, Roboto Condensed     # Obtener los gráficos sin mostrarlos plots <- preview_styles(\"warhol\", display_plots = FALSE) #> Fuentes cargadas: Bangers, Oswald, Permanent Marker, Cabin Sketch, Cutive Mono, Libre Barcode 39 Text, Bebas Neue"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_artist_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Common core function for artist-inspired ggplot2 styles — style_artist_common","title":"Common core function for artist-inspired ggplot2 styles — style_artist_common","text":"Applies visual style ggplot2 charts inspired artist specific artwork, optional painterly effects like texture, canvas overlays, glow.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_artist_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common core function for artist-inspired ggplot2 styles — style_artist_common","text":"","code":"style_artist_common(   data,   artist,   obra_inspiracion,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   title,   subtitle,   caption,   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   theme_base = ggplot2::theme_void,   grid_linetype = \"dotted\",   grid_linewidth = 0.3,   axis_line_linewidth = 0.8,   panel_background_map_specific = FALSE,   text_size = 12,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_artist_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common core function for artist-inspired ggplot2 styles — style_artist_common","text":"data data frame `sf` object, depending plot type. artist String. Artist name (e.g., `\"van_gogh\"`, `\"da_vinci\"`). obra_inspiracion String. Specific artwork define palette/theme. x, y Tidy-evaluated expressions aesthetics. color_var Optional. Tidy-evaluated expression color mapping. fill_var Optional. Tidy-evaluated expression fill mapping. label_var Optional. Tidy-evaluated expression label text. plot_type One `\"scatter\"`, `\"line\"`, `\"column\"`, `\"map\"`. title, subtitle, caption Plot title, subtitle, caption. show_labels Logical. Add text labels. add_grid_lines Logical. Show grid lines. show_background Logical. Show background fill (non-map plots). add_glow Logical. Apply glow effect geoms. coord_flip Logical. Flip coordinates (column plots). theme_base Base ggplot2 theme. Default: `theme_void`. grid_linetype Line type grid. Default: `\"dotted\"`. grid_linewidth Width grid lines. Default: `0.3`. axis_line_linewidth Width axis lines. Default: `0.8`. panel_background_map_specific Logical. Special map background fill. Default: `FALSE`. text_size Numeric. Base text size titles, labels, etc. Default: `12`. add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_artist_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common core function for artist-inspired ggplot2 styles — style_artist_common","text":"`ggplot` object styled artistic aesthetics.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_banksy.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Banksy inspired plots — style_banksy","title":"Style for Banksy inspired plots — style_banksy","text":"Generates ggplot2 plots aesthetic elements inspired Banksy's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_banksy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Banksy inspired plots — style_banksy","text":"","code":"style_banksy(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos con la Calle de Banksy\",   subtitle = \"Un mensaje subversivo en cada punto\",   caption = \"Arte Urbano de Datos\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"girl_with_balloon\", \"flower_thrower\", \"rat_graffiti\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_banksy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Banksy inspired plots — style_banksy","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels (maps plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"girl_with_balloon\", \"flower_thrower\", \"rat_graffiti\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background (non-map plots). Defaults TRUE. add_glow Logical, whether add outer glow effect. Defaults FALSE. coord_flip Logical, whether flip coordinates column charts. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_banksy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Banksy inspired plots — style_banksy","text":"ggplot2 object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_da_vinci.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Leonardo da Vinci inspired plots — style_da_vinci","title":"Style for Leonardo da Vinci inspired plots — style_da_vinci","text":"Generates ggplot2 plots aesthetic elements inspired Leonardo da Vinci's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_da_vinci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Leonardo da Vinci inspired plots — style_da_vinci","text":"","code":"style_da_vinci(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos con la Maestría de Da Vinci\",   subtitle = \"Un estudio de proporciones y armonía\",   caption = \"Análisis Renacentista\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"mona_lisa\", \"last_supper\", \"vitruvian_man\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_da_vinci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Leonardo da Vinci inspired plots — style_da_vinci","text":"data data frame sf object containing data visualized. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var Optional. tidy-evaluated expression specifying column name used color mapping. Defaults NULL. fill_var Optional. tidy-evaluated expression specifying column name used fill mapping (used column map plots). Defaults NULL. label_var Optional. tidy-evaluated expression specifying column name used text labels. Defaults NULL. title plot title string. subtitle plot subtitle string. caption plot caption string. plot_type type plot create: one `\"scatter\"`, `\"line\"`, `\"column\"`, `\"map\"`. work_inspired_by specific Da Vinci work guide aesthetic inspiration: `\"mona_lisa\"`, `\"last_supper\"`, `\"vitruvian_man\"`. show_labels Logical. TRUE, data labels displayed. Defaults FALSE. add_grid_lines Logical. TRUE, major grid lines shown (non-map plots). Defaults FALSE. show_background Logical. TRUE, shows plot panel background. Defaults TRUE. add_glow Logical. TRUE, adds soft glow effect map geometries. Defaults FALSE. coord_flip Logical. TRUE, flips coordinates (e.g., horizontal column charts matching label orientation). Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_da_vinci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Leonardo da Vinci inspired plots — style_da_vinci","text":"ggplot2 object styled Da Vinci-inspired visual elements.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_dali.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Salvador Dalí inspired plots — style_dali","title":"Style for Salvador Dalí inspired plots — style_dali","text":"Generates ggplot2 plots aesthetic elements inspired Salvador Dalí's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_dali.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Salvador Dalí inspired plots — style_dali","text":"","code":"style_dali(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos Derretidos al Estilo de Dalí\",   subtitle = \"La realidad se dobla para mostrar la verdad\",   caption = \"Análisis Surrealista\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"persistence_memory\", \"elephants\", \"swans_reflecting_elephants\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_dali.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Salvador Dalí inspired plots — style_dali","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels (maps plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"persistence_memory\", \"elephants\", \"swans_reflecting_elephants\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background (non-map plots). Defaults TRUE. add_glow Logical, whether add outer glow effect. Defaults FALSE. coord_flip Logical, whether flip coordinates column charts. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`. add_jitter Logical, whether add jitter effect scatter points (scatter plots). Defaults FALSE.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_dali.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Salvador Dalí inspired plots — style_dali","text":"ggplot2 object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_gentileschi.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Artemisia Gentileschi inspired plots — style_gentileschi","title":"Style for Artemisia Gentileschi inspired plots — style_gentileschi","text":"Generates ggplot2 plots aesthetic elements inspired Artemisia Gentileschi's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_gentileschi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Artemisia Gentileschi inspired plots — style_gentileschi","text":"","code":"style_gentileschi(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos con la Fuerza de Artemisia Gentileschi\",   subtitle = \"Un contraste dramático en la visualización\",   caption = \"Barroco de Datos\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"judith_beheading_holofernes\", \"mary_magdalene\",     \"self_portrait_lute_player\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_gentileschi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Artemisia Gentileschi inspired plots — style_gentileschi","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels (maps plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"judith_beheading_holofernes\", \"mary_magdalene\", \"self_portrait_lute_player\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background (non-map plots). Defaults TRUE. add_glow Logical, whether add outer glow effect. Defaults FALSE. coord_flip Logical, whether flip coordinates column charts. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_gentileschi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Artemisia Gentileschi inspired plots — style_gentileschi","text":"ggplot2 object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_kandinsky.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Wassily Kandinsky inspired plots — style_kandinsky","title":"Style for Wassily Kandinsky inspired plots — style_kandinsky","text":"Generates ggplot2 plots aesthetic elements inspired Wassily Kandinsky's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_kandinsky.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Wassily Kandinsky inspired plots — style_kandinsky","text":"","code":"style_kandinsky(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos con la Abstracción de Kandinsky\",   subtitle = \"Una sinfonía visual de formas y colores\",   caption = \"Composición de Datos\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"composition_viii\", \"yellow_red_blue\", \"on_white_ii\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_kandinsky.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Wassily Kandinsky inspired plots — style_kandinsky","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels (maps plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"composition_viii\", \"yellow_red_blue\", \"on_white_ii\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background. Defaults TRUE. coord_flip Logical, whether flip coordinates column charts. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`. add_shapes Logical, whether use varied shapes scatter points. Defaults FALSE.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_kandinsky.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Wassily Kandinsky inspired plots — style_kandinsky","text":"ggplot2 object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_michelangelo.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Michelangelo inspired plots — style_michelangelo","title":"Style for Michelangelo inspired plots — style_michelangelo","text":"Generates ggplot2 plots aesthetic elements inspired Michelangelo's works, David, Sistine Chapel, Pietà. Supports scatter, line, column, map visualizations customizable theming effects.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_michelangelo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Michelangelo inspired plots — style_michelangelo","text":"","code":"style_michelangelo(   data,   x,   y,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Magnificencia de Datos al Estilo de Miguel Ángel\",   subtitle = \"Una composición de fuerza y detalle\",   caption = \"Obra Maestra del Análisis\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"david\", \"sistine_chapel\", \"pieta\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_michelangelo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Michelangelo inspired plots — style_michelangelo","text":"data data frame (sf object `plot_type = \"map\"`). x Tidy-evaluated expression specifying variable x-axis. y Tidy-evaluated expression specifying variable y-axis. color_var Optional tidy-evaluated expression color mapping. Defaults NULL. fill_var Optional tidy-evaluated expression fill mapping (used column map plots). Defaults NULL. label_var Optional tidy-evaluated expression data labels (used column map plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type Type plot produce: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"david\", \"sistine_chapel\", \"pieta\". show_labels Logical. Whether display text labels plot. Defaults FALSE. add_grid_lines Logical. Whether display major grid lines (non-map plots ). Defaults FALSE. show_background Logical. Whether show panel background. Defaults TRUE. add_glow Logical. Whether apply outer glow effect (maps specific geoms). Defaults FALSE. coord_flip Logical. TRUE plot_type \"column\", flips axes label positions. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_michelangelo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Michelangelo inspired plots — style_michelangelo","text":"ggplot2 object styled Michelangelo-inspired aesthetics.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_miro.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Joan Miró inspired plots — style_miro","title":"Style for Joan Miró inspired plots — style_miro","text":"Generates ggplot2 plots aesthetic elements inspired Joan Miró's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_miro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Joan Miró inspired plots — style_miro","text":"","code":"style_miro(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos con la Fantasía de Miró\",   subtitle = \"Un universo de formas y color\",   caption = \"Análisis Surrealista Abstracto\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"the_farm\", \"constellations\", \"blue_series\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_miro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Joan Miró inspired plots — style_miro","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels (maps plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"the_farm\", \"constellations\", \"blue_series\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background (non-map plots). Defaults TRUE. coord_flip Logical, whether flip coordinates column charts. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`. add_shapes Logical, whether use varied shapes scatter points (scatter plots). Defaults FALSE.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_miro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Joan Miró inspired plots — style_miro","text":"ggplot2 object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_monet.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Claude Monet inspired plots — style_monet","title":"Style for Claude Monet inspired plots — style_monet","text":"Generates ggplot2 plots aesthetic elements inspired Claude Monet's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_monet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Claude Monet inspired plots — style_monet","text":"","code":"style_monet(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"La Impresión de los Datos al Estilo de Monet\",   subtitle = \"Armonía de luz y color\",   caption = \"Análisis Impresionista\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"water_lilies\", \"impression_sunrise\", \"poppy_fields\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_monet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Claude Monet inspired plots — style_monet","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels. Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"water_lilies\", \"impression_sunrise\", \"poppy_fields\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background (non-map plots). Defaults TRUE. add_glow Logical, whether add outer glow effect. Defaults FALSE. coord_flip Logical, whether flip coordinates column charts. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_monet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Claude Monet inspired plots — style_monet","text":"ggplot2 object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_rembrandt.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Rembrandt inspired plots — style_rembrandt","title":"Style for Rembrandt inspired plots — style_rembrandt","text":"Generates ggplot2 plots aesthetic elements inspired Rembrandt's works, *Night Watch*, *Self-Portrait*, *Storm Sea Galilee*. Supports scatter, line, column, map visualizations rich contrast depth, reminiscent chiaroscuro.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_rembrandt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Rembrandt inspired plots — style_rembrandt","text":"","code":"style_rembrandt(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Iluminando Datos al Estilo de Rembrandt\",   subtitle = \"Profundidad y contraste en la visualización\",   caption = \"Maestría en la Sombra\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"night_watch\", \"self_portrait\", \"storm_sea\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_rembrandt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Rembrandt inspired plots — style_rembrandt","text":"data data frame (sf object `plot_type = \"map\"`). x Tidy-evaluated expression specifying variable x-axis. y Tidy-evaluated expression specifying variable y-axis. color_var Optional tidy-evaluated expression color mapping. Defaults NULL. fill_var Optional tidy-evaluated expression fill mapping (used column map plots). Defaults NULL. label_var Optional tidy-evaluated expression data labels (used column map plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type Type plot produce: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"night_watch\", \"self_portrait\", \"storm_sea\". show_labels Logical. Whether display text labels plot. Defaults FALSE. add_grid_lines Logical. Whether show major grid lines (non-map plots ). Defaults FALSE. show_background Logical. Whether show panel background. Defaults TRUE. add_glow Logical. Whether apply outer glow effect geoms. Defaults FALSE. coord_flip Logical. TRUE `plot_type` \"column\", flips axes label positions. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_rembrandt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Rembrandt inspired plots — style_rembrandt","text":"ggplot2 object styled Rembrandt-inspired aesthetics.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_van_gogh.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Vincent van Gogh inspired plots — style_van_gogh","title":"Style for Vincent van Gogh inspired plots — style_van_gogh","text":"Generates ggplot2 plots aesthetic elements inspired Vincent van Gogh's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_van_gogh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Vincent van Gogh inspired plots — style_van_gogh","text":"","code":"style_van_gogh(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos con la Pasión de Van Gogh\",   subtitle = \"Un remolino de información\",   caption = \"Impresiones de Datos\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"starry_night\", \"sunflowers\", \"irises\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_van_gogh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Vincent van Gogh inspired plots — style_van_gogh","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels (maps plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"starry_night\", \"sunflowers\", \"irises\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background (non-map plots). Defaults TRUE. add_glow Logical, whether add outer glow effect. Defaults FALSE. coord_flip Logical, whether flip coords column chart (labels). Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_van_gogh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Vincent van Gogh inspired plots — style_van_gogh","text":"ggplot2 object.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_warhol.html","id":null,"dir":"Reference","previous_headings":"","what":"Style for Andy Warhol inspired plots — style_warhol","title":"Style for Andy Warhol inspired plots — style_warhol","text":"Generates ggplot2 plots aesthetic elements inspired Andy Warhol's works.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_warhol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style for Andy Warhol inspired plots — style_warhol","text":"","code":"style_warhol(   data,   x = NULL,   y = NULL,   color_var = NULL,   fill_var = NULL,   label_var = NULL,   title = \"Datos como Pop Art de Andy Warhol\",   subtitle = \"La repetición se convierte en arte\",   caption = \"Consumo de Datos\",   plot_type = c(\"column\", \"scatter\", \"line\", \"map\"),   work_inspired_by = c(\"soup_cans\", \"marilyn_monroe\", \"cow_wallpaper\"),   show_labels = FALSE,   add_grid_lines = FALSE,   show_background = TRUE,   add_glow = FALSE,   coord_flip = FALSE,   text_size = 16,   add_texture = NULL,   canvas = NULL,   add_filter = FALSE )"},{"path":"https://eliansoutu.github.io/gguapo/reference/style_warhol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style for Andy Warhol inspired plots — style_warhol","text":"data data frame sf object. x tidy-evaluated expression specifying column name x-axis (scatter, line, column plots). y tidy-evaluated expression specifying column name y-axis (scatter, line, column plots). color_var optional tidy-evaluated expression specifying column name color mapping. Defaults NULL. fill_var optional tidy-evaluated expression specifying column name fill mapping (column charts map polygons). Defaults NULL. label_var optional tidy-evaluated expression specifying column name text labels (maps plots). Defaults NULL. title plot title. subtitle plot subtitle. caption plot caption. plot_type type plot: \"scatter\", \"line\", \"column\", \"map\". work_inspired_by Specific work aesthetic inspiration: \"soup_cans\", \"marilyn_monroe\", \"cow_wallpaper\". show_labels Logical, whether show data labels. Defaults FALSE. add_grid_lines Logical, whether show major grid lines (non-map plots). Defaults FALSE. show_background Logical, whether show panel background. Defaults TRUE. coord_flip Logical, whether flip coordinates column charts. Defaults FALSE. text_size Base size text elements (titles, labels, legend). Labels annotations scale proportionally value. Defaults 16 add_texture Integer (1–3). Applies visual texture effects geoms. Default: `NULL`. canvas Integer (1–6). Adds canvas-style background image. Default: `NULL`. add_filter Experimental. Logical. Applies oil effect full graph. Default: `FALSE`.","code":""},{"path":"https://eliansoutu.github.io/gguapo/reference/style_warhol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style for Andy Warhol inspired plots — style_warhol","text":"ggplot2 object.","code":""}]
